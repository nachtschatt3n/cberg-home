---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: romm
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: romm
      version: 0.2.20
      sourceRef:
        kind: HelmRepository
        name: crystalnet
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 1
  uninstall:
    keepHistory: false
  values:
    image:
      repository: zurdi15/romm
      pullPolicy: IfNotPresent

    persistence:
      resources:
        enabled: true
        volumeSpec:
          storageClassName: csi-driver-nfs
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 15Gi
      logs:
        enabled: true
        volumeSpec:
          storageClassName: csi-driver-nfs
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
      database:
        enabled: false

    mariadb:
      enabled: true
      auth:
        database: romm
        username: romm
        password: romm
      primary:
        persistence:
          enabled: true
          storageClass: csi-driver-nfs
          size: 10Gi

    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: true
      master:
        persistence:
          enabled: true
          storageClass: csi-driver-nfs
          size: 2Gi

    config:
      auth:
        # -- enable romm's integrated authentication mechanics (this requires redis to be available)
        enabled: false
        # -- default username for the admin user
        username: admin
        # -- default password for the admin user
        password: admin
        # -- use an pre-existing secret to provide credentials
        #    it should contain the keys romm-user and romm-pass
        existing_secret:
      filesystem_watcher:
        # -- enable inotify filesystem watcher mechanics to automatically add new roms and pick up changes as they happen
        enabled: true
        scan_delay: 5
      scheduled_tasks:
        filesystem_scan:
          enabled: true
          # -- Cron expression for the scheduled scan (default: 0 3 * * * - At 3:00 AM every day)
          cron: 0 3 * * *
        switch_titledb_update:
          enabled: true
          # -- Cron expression to update switch titledb (default: 0 4 * * * - At 4:00 AM every day)
          cron: 0 4 * * *
        mame_xml_update:
          enabled: true
          # -- Cron expression to update mame xml database (default: 0 5 * * * - At 5:00 AM every day)
          cron: 0 5 * * *
      database:
        # -- type can either be mariadb or sqlite
        type: mariadb
        # -- only needed when type is mariadb and mariadb.enabled is set to false
        #    meaning you would use an external already existing mariadb instance
        # @default -- See [values.yaml](./values.yaml)
      igdb_api:
        # -- use an pre-existing secret to provide credentials
        #    it should contain the keys igdb-client-id and igdb-client-secret
        existing_secret:
        # -- setup your igdb api client_id, get one from https://api-docs.igdb.com/#getting-started
        client_id: CHANGEME_IGDB_CLIENT_ID
        # -- setup your igdb api client_secret, get it from https://api-docs.igdb.com/#getting-started
        client_secret: CHANGEME_IGDB_CLIENT_SECRET
      steamgriddb_api:
        # -- work in progress and not fully implemented yet
        api_key: CHANGEME_STEAMGRIDDB_API_KEY
    settings:
      exclude:
        # -- Exclude platforms to be scanned
        platforms:
          - 'romm'

        # -- Exclude roms or parts of roms to be scanned
        # @default -- See [values.yaml](./values.yaml)
        roms:
          # Single file games section
          single_file:
            # -- Exclude matched file names to be scanned
            names:
              - 'info.txt'
            # -- Exclude all files with certain extensions to be scanned
            extensions:
              - 'xml'

          # Multi files games section
          multi_file:
            # -- Exclude matched 'folder' (RomM identifies folders as multi file games) names to be scanned
            names:
              - 'my_multi_file_game'
              - 'DLC'
            parts:
              # -- Exclude matched file names to be scanned from multi file roms
              #    Keep in mind that RomM doesn't scan folders inside multi files games,
              #    so there is no need to exclude folders from inside of multi files games.
              names:
                - 'data.xml'
              # -- Exclude all files with certain extensions to be scanned from multi file roms
              extensions:
                - 'txt'

      # Asociate different platform names to your current file system platform names
      system:
        # -- use to overwrite romm's expected folder names for platforms with your own custom names
        # @default -- See [values.yaml](./values.yaml)
        platforms:
          # [your custom platform folder name]: [RomM platform name]
          gc: 'ngc'
          psx: 'ps'

    # -- The list of additional volumes that will be mounted inside romm pod, this one to `/romm/library`.
    mediaVolume:
      enabled: true
      name: library
      volumeSpec:
        storageClassName: csi-driver-nfs
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
